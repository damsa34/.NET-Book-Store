@model Books.Models.Book

@{
    ViewData["Title"] = $"Details - {Model.Title}";
}

<div class="container mt-4">
    <div class="row d-flex align-items-start">
        <div class="col-md-4">
            @if (!string.IsNullOrEmpty(Model.FrontPage))
            {
                <img src="@Model.FrontPage" class="img-fluid rounded shadow"
                     style="max-width: 100%; max-height: 100vh; object-fit: contain;" alt="@Model.Title cover" />
            }
            else
            {
                <p class="text-muted">No cover image available.</p>
            }
        </div>

        <div class="col-md-8 d-flex flex-column">
            <h1 class="display-4">@Model.Title</h1>
            <p class="lead">
                by <strong><a asp-action="Details" asp-controller="Authors" asp-route-id="@Model.Author.Id">@Model.Author.FullName</a></strong>
            </p>

            <dl class="row mt-4">
                <dt class="col-sm-4">Year Published</dt>
                <dd class="col-sm-8">@Html.DisplayFor(model => model.YearPublished)</dd>

                <dt class="col-sm-4">Genres</dt>
                <dd class="col-sm-8">
                    @if (Model.Genres == null || !Model.Genres.Any())
                    {
                        <span class="badge bg-warning text-dark">No genres available</span>
                    }
                    else
                    {
                        @foreach (var genre in Model.Genres)
                        {
                            <a asp-action="Details" asp-controller="Genres" asp-route-id="@genre.GenreId" class="badge bg-secondary">@genre.Genre.GenreName</a>
                        }
                    }
                </dd>

                <dt class="col-sm-4">Publisher</dt>
                <dd class="col-sm-8">@Html.DisplayFor(model => model.Publisher)</dd>

                <dt class="col-sm-4">Number of Pages</dt>
                <dd class="col-sm-8">@Html.DisplayFor(model => model.NumPages)</dd>

                <dt class="col-sm-4">Average Rating</dt>
                <dd class="col-sm-8">
                    <span class="badge bg-info text-dark">@Model.AverageRating() / 10</span>
                </dd>

                <dt class="col-sm-4">Description</dt>
                <dd class="col-sm-8">
                    <p>@Html.DisplayFor(model => model.Description)</p>
                </dd>

                @if (User.Identity.IsAuthenticated && User.IsInRole("User"))
                {
                    <dt class="col-sm-4">Download</dt>
                    <dd class="col-sm-8">
                        <a href="@Model.DownloadUrl" class="btn btn-outline-success" target="_blank">
                            <i class="bi bi-download"></i> Download Book
                        </a>
                    </dd>
                }
            </dl>
        </div>
    </div>

    <hr class="my-4" />

    <div>
        <h2>Reviews for <span class="text-primary">@Model.Title</span></h2>
        @if (Model.Reviews == null || !Model.Reviews.Any())
        {
            <p class="text-muted">No reviews available for this book.</p>
        }
        else
        {
            <ul class="list-group">
                @foreach (var review in Model.Reviews)
                {
                    <li class="list-group-item d-flex justify-content-between align-items-start">
                        <div class="ms-2 me-auto">
                            <div class="fw-bold">@review.AppUser</div>
                            <span>@review.Comment</span>
                        </div>
                        <span class="badge bg-primary rounded-pill">Rating: @review.Rating / 10</span>
                    </li>
                }
            </ul>
        }
    </div>

    <div class="mt-4">
        @if (User.Identity.IsAuthenticated && User.IsInRole("Admin"))
        {
            <a asp-action="Edit" asp-route-id="@Model.Id" class="btn btn-warning">Edit Book</a>
        }
        <a asp-action="Index" class="btn btn-secondary">Back to List</a>
    </div>
</div>
